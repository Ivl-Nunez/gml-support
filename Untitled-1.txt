is_real(val)
is_string(val)
is_array(val)
is_undefined(val)
is_int32(val)
is_int64(val)
is_ptr(val)
is_vec3(val)
is_vec4(val)
is_matrix(val)
is_bool(val)
typeof(val)
variable_global_exists(name)
variable_global_get(name)
variable_global_set(name,val)
variable_instance_exists(id,name)
variable_instance_get(id,name)
variable_instance_set(id,name,val)
array_length_1d(variable)
array_length_2d(variable, index)
array_height_2d(variable)
array_equals(var1,var2)
array_create(size, val, ...)
array_copy(dest,dest_index,src,src_index,length)
random(x)
random_range(x1,x2)
irandom(x)
irandom_range(x1,x2)
random_set_seed(seed)
random_get_seed()
randomize()$
randomise()£
choose(x1,x2,x3,...)
abs(x)
round(x)
floor(x)
ceil(x)
sign(x)
frac(x)
sqrt(x)
sqr(x)
exp(x)
ln(x)
log2(x)
log10(x)
sin(radian_angle)
cos(radian_angle)
tan(radian_angle)
arcsin(x)
arccos(x)
arctan(x)
arctan2(y,x)
dsin(degree_angle)
dcos(degree_angle)
dtan(degree_angle)
darcsin(x)
darccos(x)
darctan(x)
darctan2(y,x)
degtorad(x)
radtodeg(x)
power(x,n)
logn(n,x)
min(x1,x2,x3,...)
max(x1,x2,x3,...)
mean(x1,x2,x3,...)
median(x1,x2,x3,...)
clamp(val,min,max)
lerp(val1,val2,amount)
dot_product(x1,y1,x2,y2)
dot_product_3d(x1,y1,z1,x2,y2,z2)
dot_product_normalised(x1,y1,x2,y2)£
dot_product_3d_normalised(x1,y1,z1,x2,y2,z2)£
dot_product_normalized(x1,y1,x2,y2)$
dot_product_3d_normalized(x1,y1,z1,x2,y2,z2)$
math_set_epsilon(new_epsilon)
math_get_epsilon()
angle_difference(src,dest)
point_distance_3d(x1,y1,z1,x2,y2,z2)
point_distance(x1,y1,x2,y2)
point_direction(x1,y1,x2,y2)
lengthdir_x(len,dir)
lengthdir_y(len,dir)

// section 2.3

real(str)
string(val)
int64(val)
ptr(val)
string_format(val,total,dec)
chr(val)
ansi_char(val)
ord(char)
string_length(str)
string_byte_length(str)
string_pos(substr,str)
string_copy(str,index,count)
string_char_at(str,index)
string_ord_at(str,index)
string_byte_at(str,index)
string_set_byte_at(str,index,val)
string_delete(str,index,count)
string_insert(substr,str,index)
string_lower(str)
string_upper(str)
string_repeat(str,count)
string_letters(str)
string_digits(str)
string_lettersdigits(str)
string_replace(str,substr,newstr)
string_replace_all(str,substr,newstr)
string_count(substr,str)
string_hash_to_newline(str)
clipboard_has_text()
clipboard_set_text(str)
clipboard_get_text()

// section 2.4

date_current_datetime()
date_create_datetime(year,month,day,hour,minute,second)
date_valid_datetime(year,month,day,hour,minute,second)
date_inc_year(date,amount)
date_inc_month(date,amount)
date_inc_week(date,amount)
date_inc_day(date,amount)
date_inc_hour(date,amount)
date_inc_minute(date,amount)
date_inc_second(date,amount)
date_get_year(date)
date_get_month(date)
date_get_week(date)
date_get_day(date)
date_get_hour(date)
date_get_minute(date)
date_get_second(date)
date_get_weekday(date)
date_get_day_of_year(date)
date_get_hour_of_year(date)
date_get_minute_of_year(date)
date_get_second_of_year(date)
date_year_span(date1,date2)
date_month_span(date1,date2)
date_week_span(date1,date2)
date_day_span(date1,date2)
date_hour_span(date1,date2)
date_minute_span(date1,date2)
date_second_span(date1,date2)
date_compare_datetime(date1,date2)
date_compare_date(date1,date2)
date_compare_time(date1,date2)
date_date_of(date)
date_time_of(date)
date_datetime_string(date)
date_date_string(date)
date_time_string(date)
date_days_in_month(date)
date_days_in_year(date)
date_leap_year(date)
date_is_today(date)
date_set_timezone(timezone)
date_get_timezone()
motion_set(dir,speed)
motion_add(dir,speed)
place_free(x,y)
place_empty(x,y)
place_meeting(x,y,obj)
place_snapped(hsnap,vsnap)
move_random(hsnap,vsnap)
move_snap(hsnap,vsnap)
move_towards_point(x,y,sp)
move_contact_solid(dir,maxdist)
move_contact_all(dir,maxdist)
move_outside_solid(dir,maxdist)
move_outside_all(dir,maxdist)
move_bounce_solid(advanced)
move_bounce_all(advanced)
move_wrap(hor,vert,margin)
distance_to_point(x,y)
distance_to_object(obj)
position_empty(x,y)
position_meeting(x,y,obj)
path_start(path,speed,endaction,absolute)
path_end()
mp_linear_step(x,y,speed,checkall)
mp_potential_step(x,y,speed,checkall)
mp_linear_step_object(x,y,speed,obj)
mp_potential_step_object(x,y,speed,obj)
mp_potential_settings(maxrot,rotstep,ahead,onspot)
mp_linear_path(path,xg,yg,stepsize,checkall) 
mp_potential_path(path,xg,yg,stepsize,factor,checkall) 
mp_linear_path_object(path,xg,yg,stepsize,obj) 
mp_potential_path_object(path,xg,yg,stepsize,factor,obj) 
mp_grid_create(left,top,hcells,vcells,cellwidth,cellheight)
mp_grid_destroy(id)
mp_grid_clear_all(id)
mp_grid_clear_cell(id,h,v)
mp_grid_clear_rectangle(id,left,top,right,bottom)
mp_grid_add_cell(id,h,v)
mp_grid_get_cell(id,h,v)
mp_grid_add_rectangle(id,left,top,right,bottom)
mp_grid_add_instances(id,obj,prec)
mp_grid_path(id,path,xstart,ystart,xgoal,ygoal,allowdiag)
mp_grid_draw(id)
mp_grid_to_ds_grid(src,dest)
collision_point(x,y,obj,prec,notme)
collision_rectangle(x1,y1,x2,y2,obj,prec,notme)
collision_circle(x1,y1,radius,obj,prec,notme)
collision_ellipse(x1,y1,x2,y2,obj,prec,notme)
collision_line(x1,y1,x2,y2,obj,prec,notme)
point_in_rectangle(px,py,x1,y1,x2,y2)
point_in_triangle(px,py,x1,y1,x2,y2,x3,y3)
point_in_circle(px,py,cx,cy,rad)
rectangle_in_rectangle(sx1,sy1,sx2,sy2,dx1,dy1,dx2,dy2)
rectangle_in_triangle(sx1,sy1,sx2,sy2,x1,y1,x2,y2,x3,y3)
rectangle_in_circle(sx1,sy1,sx2,sy2,cx,cy,rad)
instance_find(obj,n)
instance_exists(obj)
instance_number(obj)
instance_position(x,y,obj)
instance_nearest(x,y,obj)
instance_furthest(x,y,obj)
instance_place(x,y,obj)
instance_create_depth(x,y,depth,obj)
instance_create_layer(x,y,layer_id_or_name,obj)
instance_copy(performevent)
instance_change(obj,performevents)
instance_destroy(id*,execute_event_flag*,...)
position_destroy(x,y)
position_change(x,y,obj,performevents)
instance_id_get(index)
instance_deactivate_all(notme)
instance_deactivate_object(obj)
instance_deactivate_region(left,top,width,height,inside,notme)
instance_activate_all()
instance_activate_object(obj)
instance_activate_region(left,top,width,height,inside)
room_goto(numb)
room_goto_previous()
room_goto_next()
room_previous(numb)
room_next(numb)
room_restart()
game_end()
game_restart()
game_load(filename)
game_save(filename)
game_save_buffer(buffer)
game_load_buffer(buffer)
